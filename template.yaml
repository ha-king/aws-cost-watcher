AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'AWS Daily Cost Watcher'

Parameters:
  SlackWebHookUrl:
    Type: String
    AllowedPattern: 'hooks.slack.com/services/[\w/]+'
    Default: 'hooks.slack.com/services/xxxx'
    Description: '[hooks.slack.com/services/xxxx] Webhook URL of Slack (Except "https://"). You can get the URL from https://slack.com/services/new/incoming-webhook.'
    ConstraintDescription: 'Must be a valid URL of the form hooks.slack.com/services/xxxx'
  SlackNotificationLanguage:
    Type: String
    AllowedValues:
      - English
      - Japanese
    Default: English
    Description: 'Language of Slack notification. Now we support English and Japanese.'
  NotificationTime:
    Type: Number
    Default: '7'
    Description: '[Int: 0-23] Notification time in 24-hour notation (UTC). This value should be 7, 14, 22 because billing metrics are put at around 5(6)am, 1pm, 9pm.' 
  DailyCostNotificationThreshold:
    Type: Number
    Default: 0
    Description: '[Int] Notification threshold of Daily Cost ($). Notification will be sent when daily cost is over this threshold'
  DailyCostWarningThreshold:
    Type: Number
    Default: 0
    Description: '[Int] Warning threshold of Daily Cost ($). Notification color will change from green to red when daily cost is over this threshold'

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CloudWatchAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:ListMetrics
                Resource: '*'
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./function
      Handler: app.lambda_handler
      Runtime: python3.6
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 90
      Environment:
        Variables:
          SlackWebHookUrl: !Ref SlackWebHookUrl
          DailyCostNotificationThreshold: !Ref DailyCostNotificationThreshold
          DailyCostWarningThreshold: !Ref DailyCostWarningThreshold
          SlackNotificationLanguage: !Ref SlackNotificationLanguage
          NotificationTime: !Ref NotificationTime
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: !Sub 'cron(0 ${NotificationTime} * * ? *)'
  # Custom resource to invoke lambda function for init test 
  InitTest:
    Type: Custom::InitTest
    Properties:
      ServiceToken: !GetAtt LambdaFunction.Arn
      InitTest: 'true'